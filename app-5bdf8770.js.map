{"version":3,"sources":["webpack:///./src/components/about/action.js","webpack:///./src/components/about/reducer.js","webpack:///./src/reducers.ts","webpack:///./src/index.tsx"],"names":["types","ADD_ABOUT_PAGEVIEW","addPageView","dispatch","getState","type","payload","about","pageView","draft","option","application","component","rootElementId","onHotReload","next","module","hot","store","middlewares","reducers","initialState","router","isUseBrowserRouter","serviceWorker","isUse","init"],"mappings":"yFAAA,sCAAMA,EAAQ,CACZC,mBAAoB,sBAIf,SAASC,IACd,OAAO,SAACC,EAAUC,GAChB,OAAAD,EAAS,CACPE,KAAML,EAAMC,mBACZK,QAASF,IAAWG,MAAMC,SAAW,KAN5B,O,2DCIA,qBAAQ,SAACC,EAAO,G,IAAEJ,EAAA,EAAAA,KAAMC,EAAA,EAAAA,QACrC,OAAQD,GACN,KAAK,IAAMJ,mBACTQ,EAAMD,SAAWF,KAPI,CACzBE,SAAU,ICAG,8BAAgB,CAE7BD,MAAK,K,0ECNP,+CAMMG,EAAyB,CAC7BC,YAAa,CACXC,UAAW,WAAM,2DACjBC,cAAe,MACfC,YAAa,SAAAC,GAAQ,OAAAC,EAAOC,MAAO,IAErCC,MAAO,CACLC,YAAa,CAAC,KACdC,SAAQ,IACRC,aAAc,IAEhBC,OAAQ,CACNC,oBAAoB,GAEtBC,cAAe,CACbC,OAAO,IAIX,SAAOC,KAAKhB,I","file":"app-5bdf8770.js","sourcesContent":["const types = {\n  ADD_ABOUT_PAGEVIEW: 'ADD_ABOUT_PAGEVIEW',\n}\nexport default types\n\nexport function addPageView () {\n  return (dispatch, getState) =>\n    dispatch({\n      type: types.ADD_ABOUT_PAGEVIEW,\n      payload: getState().about.pageView + 1,\n    })\n}\n","import produce from 'immer'\nimport types from './action'\n\nconst initialState = () => ({\n  pageView: 0,\n})\n\nexport default produce((draft, { type, payload }) => {\n  switch (type) {\n    case types.ADD_ABOUT_PAGEVIEW:\n      draft.pageView = payload\n      break\n    default:\n      break\n  }\n}, initialState())\n","import { combineReducers } from 'redux';\n\nimport about from './components/about/reducer';\n\nexport default combineReducers({\n  /* Insert reducers here */\n  about,\n});\n","import ReduxThunk from 'redux-thunk';\nimport { Ignite } from '@mornya/react-helper';\nimport reducers from './reducers';\n\ndeclare var module: Ignite.IHotNodeModule;\n\nconst option: Ignite.IOption = {\n  application: {\n    component: () => import('./App'),\n    rootElementId: 'app',\n    onHotReload: next => module.hot && module.hot.accept('./App', next),\n  },\n  store: {\n    middlewares: [ReduxThunk],\n    reducers,\n    initialState: {},\n  },\n  router: {\n    isUseBrowserRouter: true,\n  },\n  serviceWorker: {\n    isUse: process.env.NODE_ENV === 'production',\n  },\n};\n\nIgnite.init(option);\n"],"sourceRoot":""}